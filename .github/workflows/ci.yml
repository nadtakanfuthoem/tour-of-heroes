name: Cypress Tests
on: [push]
jobs:
  cypress-run:
    name: Cypress run
    runs-on: ubuntu-latest
    # let's make sure our "app" works on several versions of Node
    strategy:
      matrix:
        node: [14, 16, 18]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # check out all commits to get accurate created date
          fetch-depth: 0
        
      - name: Setup node version
        uses: actions/setup-node@v3
        with:
          node-version: 16 # This allow Github Workflow running on node 16

      - name: Print Node version 
        run: node -v
      
      - name: Cypress run
        # *best practices with specific version to mitigate unforeseen breaks
        uses: cypress-io/github-action@v5.6.2 
        with:
          # build appplication
          build: npm run build 
          # start server
          start: npm start 
          # wait until an app start, quote the url to be safe against YML parsing surprises
          wait-on: 'http://localhost:4200' 
          # wait for 2 minutes for the server to respond
          wait-on-timeout: 120
          # record test results on Cypress Cloud
          record: true 
          # use component testing
          component: true 
          # specify the browser, default is electron browser. Options: chrome, firefox, edge, electron
          browser: chrome
          # Tag recordings, You can pass multiple tags using commas like tag: node-18,nightly,staging.
          tag: node-${{ matrix.node }}
          # cancel the run after 2 failed tests
          auto-cancel-after-failures: 2
          #  silence any Cypress specific output from stdout
          quiet: true
          # specify configuration values with config parameter
          config: pageLoadTimeout=100000,baseUrl=http://localhost:3000
          # custom build id
          ci-build-id: '${{ github.sha }}-${{ github.workflow }}-${{ github.event_name }}'
        env:
          # pass the Cypress Cloud record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # *best practices, pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # pass the project ID from the secrets through environment variable
          # CYPRESS_PROJECT_ID: ${{ secrets.PROJECT_ID }}
